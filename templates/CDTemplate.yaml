 steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'MyAzureCR1'
              command: 'login'

          - task: CmdLine@2
            inputs:
              script: |
                docker rm -f $(docker ps -qa)
                docker run -d -p 8080:8080 -d --name=bootcamp   myazurecr1.azurecr.io/dockerapp:$(tag)
                cat <<EOF >.env
                # Host configuration
                        
                          PORT=8080
                          HOST=0.0.0.0
                          
                          
                          # Postgres
                          PGHOST=$(PGHOST)
                          PGUSERNAME=$(PGUSERNAMEE)
                          PGDATABASE=$(PGDBNAME)
                          PGPASSWORD=$(PGPASS)
                          PGPORT=$(PGPORT)
                          
                          # Host Configurations
                          HOST_URL=$(HOST_URL)
                          COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
                          NODE_ENV=development
                                     
                          # Okta configuration
                           
                          OKTA_ORG_URL=$(OKTAURL)
                          OKTA_CLIENT_ID= $(OKTAID)
                          OKTA_CLIENT_SECRET= $(OKTASECRET)
                
                EOF
                # Adding the new .env to the container
                 docker cp /home/Ansible-Controler/myagent/_work/1/s/.env $(docker ps -qa):/usr/src/app/.env 
                # saving the new image of the container
                 docker commit $(docker ps -qa) newimage
                # Creating .tar file of the new image 
                 docker save -o ./newimage.tar newimage:latest
                # Cloning ansible 
                 git clone https://github.com/GuyR53/AnsibleWeek6Code.git
                 rm -rf .git
          
          - task: Ansible@0
            inputs:
              ansibleInterface: 'agentMachine'
              playbookPathOnAgentMachine: '$(PlaybookPath)'
              inventoriesAgentMachine: 'file'
              inventoryFileOnAgentMachine: '$(InentoryPath)'
              args: '--extra-vars server_env_group="$(HostType)"'
              failOnStdErr: false
