# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2439aa01-ecbd-4f2b-a801-6fc0d1d50cc1'
  imageRepository: 'dockerapp'
  containerRegistry: 'myazurecr1.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  

stages:
- stage: Build
  displayName: Build and push docker Image
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: StagingPool
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)


   
# Continuous Deployment Process for Staging Environment
- stage: DeployToStaging
  variables:
  - group: envStage
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: staging
    displayName: Deploy to Staging
    pool:
      name: StagingPool
    environment:
      name: Staging
    strategy:
      runOnce:
        deploy:
          steps:
          - template: templates/CDTemplate.yaml
          

                
                


# Continuous Delivery Process for Production Environment
- stage: DeployToProduction
  variables:
  - group: envProd
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: production
    displayName: Deploy to Production
    pool:
      name: ProductionPool
    environment:
      name: Production
    strategy:
      runOnce:
        deploy:
          steps:
          - template: templates/CDTemplate.yaml